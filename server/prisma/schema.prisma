// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(uuid())
  full_name     String
  profile_photo String  @default("https://ca.slack-edge.com/T2JUP6F0A-U03L7HL9WBF-g6ea89c2bc88-512")
  email         String  @unique
  phone         String?
  date_of_birth DateTime?
  address String?
  title String?
  password      String
  refresh_token String?
  forgot_password_token String?
  verify_token String?
  is_verified   Boolean @default(false)
  is_premium    Boolean @default(false)

  songs           Song[] @relation("uploaded")
  favourite_songs Song[] @relation("FavouriteSong")

  playlists Playlist[] @relation("created")
  is_deleted Boolean @default(false)
  deleted_at DateTime?

  favourite_playlists FavouritePlaylist[]
}

enum Privacy {
   private
   public
}

model Song {
  id          String @id @default(uuid())
  url         String
  thumbnail   String
  name        String
  singer_name String
  duration    Int

  user       User     @relation("uploaded", fields: [user_id], references: [id])
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  privacy Privacy @default(private)
  public_at DateTime? 

  liked_by User[] @relation("FavouriteSong")
  is_deleted Boolean @default(false)
  deleted_at DateTime?
  playlists Playlist[] 
}

model Playlist {
   id String @id @default(uuid())
   thumbnail String @default("https://photo-zmp3.zmdcdn.me/album_default.png")
   title String
   
   creator User @relation("created",  fields: [creator_id], references: [id])
   creator_id String
   songs Song[] 

   privacy Privacy @default(private)
   play_random  Boolean @default(true)
   public_at DateTime? 
   created_at DateTime @default(now())
   updated_at DateTime @updatedAt
   is_deleted Boolean @default(false)
   deleted_at DateTime?

   artists Artist[] 
   categories Category[]

   liked_by FavouritePlaylist[]
}

model FavouritePlaylist {
    user User @relation(fields: [user_id], references: [id])
    user_id String
    playlist Playlist @relation(fields: [playlist_id], references: [id])
    playlist_id String
    created_at DateTime @default(now())

    @@id([user_id, playlist_id])
}

model Artist {
   id String @id @default(uuid())
   name String
   thumbnail String @default("https://photo-zmp3.zmdcdn.me/artist_default_2.png")
   birthday DateTime?
   biography String?
   national String?
   realname String?
   
   play_lists Playlist[] 

   created_at DateTime @default(now())
   updated_at DateTime @updatedAt
   is_deleted Boolean @default(false)
   deleted_at DateTime?
}

model Category {
   id String @id @default(uuid())
   name String
   thumbnail String
   parent Category? @relation("NestCategory", fields: [parentId], references: [id])
   parentId String
   children Category[] @relation("NestCategory")
   playlists Playlist[] 

   created_at DateTime @default(now())
   updated_at DateTime @updatedAt
   is_deleted Boolean @default(false)
   deleted_at DateTime?
}